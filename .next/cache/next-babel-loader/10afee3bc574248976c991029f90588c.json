{"ast":null,"code":"var _jsxFileName = \"/Users/rsykes/Shopify/Final/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport fetch from \"node-fetch\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport App from \"next/app\";\nimport { AppProvider } from \"@shopify/polaris\";\nimport { Provider } from \"@shopify/app-bridge-react\";\nimport \"@shopify/polaris/dist/styles.css\";\nimport translations from \"@shopify/polaris/locales/en.json\";\nconst client = new ApolloClient({\n  fetch: fetch,\n  fetchOptions: {\n    credentials: \"include\"\n  }\n});\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps,\n      shopOrigin\n    } = this.props;\n    return __jsx(AppProvider, {\n      i18n: translations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, __jsx(Provider, {\n      config: {\n        apiKey: API_KEY,\n        shopOrigin: shopOrigin,\n        forceRedirect: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, __jsx(ApolloProvider, {\n      client: client,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}\n\nMyApp.getInitialProps = async ({\n  ctx\n}) => {\n  return {\n    shopOrigin: ctx.query.shop\n  };\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/rsykes/Shopify/Final/pages/_app.js"],"names":["fetch","ApolloClient","ApolloProvider","App","AppProvider","Provider","translations","client","fetchOptions","credentials","MyApp","render","Component","pageProps","shopOrigin","props","apiKey","API_KEY","forceRedirect","getInitialProps","ctx","query","shop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAO,kCAAP;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AAEA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC9BD,EAAAA,KAAK,EAAEA,KADuB;AAE9BQ,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD;AAFgB,CAAjB,CAAf;;AAMA,MAAMC,KAAN,SAAoBP,GAApB,CAAwB;AACtBQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD;AACA,WACE,MAAC,WAAD;AAAa,MAAA,IAAI,EAAET,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AACE,MAAA,MAAM,EAAE;AACNU,QAAAA,MAAM,EAAEC,OADF;AAENH,QAAAA,UAAU,EAAEA,UAFN;AAGNI,QAAAA,aAAa,EAAE;AAHT,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEX,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAPF,CADF,CADF;AAeD;;AAlBqB;;AAqBxBH,KAAK,CAACS,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACzC,SAAO;AACLN,IAAAA,UAAU,EAAEM,GAAG,CAACC,KAAJ,CAAUC;AADjB,GAAP;AAGD,CAJD;;AAMA,eAAeZ,KAAf","sourcesContent":["import fetch from \"node-fetch\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport App from \"next/app\";\nimport { AppProvider } from \"@shopify/polaris\";\nimport { Provider } from \"@shopify/app-bridge-react\";\nimport \"@shopify/polaris/dist/styles.css\";\nimport translations from \"@shopify/polaris/locales/en.json\";\n\nconst client = new ApolloClient({\n  fetch: fetch,\n  fetchOptions: {\n    credentials: \"include\",\n  },\n});\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps, shopOrigin } = this.props;\n    return (\n      <AppProvider i18n={translations}>\n        <Provider\n          config={{\n            apiKey: API_KEY,\n            shopOrigin: shopOrigin,\n            forceRedirect: true,\n          }}\n        >\n          <ApolloProvider client={client}>\n            <Component {...pageProps} />\n          </ApolloProvider>\n        </Provider>\n      </AppProvider>\n    );\n  }\n}\n\nMyApp.getInitialProps = async ({ ctx }) => {\n  return {\n    shopOrigin: ctx.query.shop,\n  };\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}